name: CI

on:
  pull_request:
    branches: [main, master, develop]

permissions:
  contents: read
  security-events: write

env:
  NODE_VERSION: "20"

jobs:
  # Separate job for faster feedback on basic checks
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: TypeScript check
        run: npm run ts

      - name: ESLint check
        run: npm run lint

      - name: Check package.json and lock file sync
        run: |
          npm ci --dry-run

  # Build job with caching
  build:
    name: Build & Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 15

    outputs:
      dist-cache-key: ${{ steps.cache-dist.outputs.cache-hit }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Cache dist folder
        id: cache-dist
        uses: actions/cache@v4
        with:
          path: dist
          key: dist-${{ runner.os }}-${{ github.sha }}

      - name: Build project (MapLibre)
        if: steps.cache-dist.outputs.cache-hit != 'true'
        run: npm run build

      - name: Verify build artifacts
        run: |
          test -f dist/maplibre-geoman.es.js
          test -f dist/maplibre-geoman.umd.js
          test -f dist/maplibre-geoman.d.ts

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  # Test job with Playwright
  test:
    name: Test Suite
    runs-on: large-test-runner
    timeout-minutes: 60
    needs: [quick-checks]

    strategy:
      matrix:
        browser: [chromium]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }}

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 7

  # Security scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  # Final check job that depends on all others
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [quick-checks, build, test, security]
    if: always()

    steps:
      - name: Check all jobs success
        run: |
          if [[ "${{ needs.quick-checks.result }}" != "success" || \
                "${{ needs.build.result }}" != "success" || \
                "${{ needs.test.result }}" != "success" || \
                "${{ needs.security.result }}" != "success" ]]; then
            echo "One or more CI jobs failed"
            exit 1
          fi
          echo "All CI jobs passed successfully"
